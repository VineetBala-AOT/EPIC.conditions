/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OidcCallbackImport } from './routes/oidc-callback'
import { Route as ErrorImport } from './routes/error'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/_dashboard'
import { Route as AuthenticatedDashboardProjectsIndexImport } from './routes/_authenticated/_dashboard/projects/index'
import { Route as AuthenticatedDashboardConditionsProjectProjectIdIndexImport } from './routes/_authenticated/_dashboard/conditions/project/$projectId/index'
import { Route as AuthenticatedDashboardConditionsCreateConditionIdIndexImport } from './routes/_authenticated/_dashboard/conditions/create/$conditionId/index'
import { Route as AuthenticatedDashboardDocumentsProjectProjectIdDocumentCategoryCategoryIdIndexImport } from './routes/_authenticated/_dashboard/documents/project/$projectId/document-category/$categoryId/index'
import { Route as AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdIndexImport } from './routes/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/index'
import { Route as AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdConditionConditionIdIndexImport } from './routes/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/condition/$conditionId/index'

// Create/Update Routes

const OidcCallbackRoute = OidcCallbackImport.update({
  path: '/oidc-callback',
  getParentRoute: () => rootRoute,
} as any)

const ErrorRoute = ErrorImport.update({
  path: '/error',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardProjectsIndexRoute =
  AuthenticatedDashboardProjectsIndexImport.update({
    path: '/projects/',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedDashboardConditionsProjectProjectIdIndexRoute =
  AuthenticatedDashboardConditionsProjectProjectIdIndexImport.update({
    path: '/conditions/project/$projectId/',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedDashboardConditionsCreateConditionIdIndexRoute =
  AuthenticatedDashboardConditionsCreateConditionIdIndexImport.update({
    path: '/conditions/create/$conditionId/',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedDashboardDocumentsProjectProjectIdDocumentCategoryCategoryIdIndexRoute =
  AuthenticatedDashboardDocumentsProjectProjectIdDocumentCategoryCategoryIdIndexImport.update(
    {
      path: '/documents/project/$projectId/document-category/$categoryId/',
      getParentRoute: () => AuthenticatedDashboardRoute,
    } as any,
  )

const AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdIndexRoute =
  AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdIndexImport.update(
    {
      path: '/conditions/project/$projectId/document/$documentId/',
      getParentRoute: () => AuthenticatedDashboardRoute,
    } as any,
  )

const AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdConditionConditionIdIndexRoute =
  AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdConditionConditionIdIndexImport.update(
    {
      path: '/conditions/project/$projectId/document/$documentId/condition/$conditionId/',
      getParentRoute: () => AuthenticatedDashboardRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorImport
      parentRoute: typeof rootRoute
    }
    '/oidc-callback': {
      id: '/oidc-callback'
      path: '/oidc-callback'
      fullPath: '/oidc-callback'
      preLoaderRoute: typeof OidcCallbackImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_dashboard': {
      id: '/_authenticated/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_dashboard/projects/': {
      id: '/_authenticated/_dashboard/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthenticatedDashboardProjectsIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/_dashboard/conditions/create/$conditionId/': {
      id: '/_authenticated/_dashboard/conditions/create/$conditionId/'
      path: '/conditions/create/$conditionId'
      fullPath: '/conditions/create/$conditionId'
      preLoaderRoute: typeof AuthenticatedDashboardConditionsCreateConditionIdIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/_dashboard/conditions/project/$projectId/': {
      id: '/_authenticated/_dashboard/conditions/project/$projectId/'
      path: '/conditions/project/$projectId'
      fullPath: '/conditions/project/$projectId'
      preLoaderRoute: typeof AuthenticatedDashboardConditionsProjectProjectIdIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/': {
      id: '/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/'
      path: '/conditions/project/$projectId/document/$documentId'
      fullPath: '/conditions/project/$projectId/document/$documentId'
      preLoaderRoute: typeof AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/_dashboard/documents/project/$projectId/document-category/$categoryId/': {
      id: '/_authenticated/_dashboard/documents/project/$projectId/document-category/$categoryId/'
      path: '/documents/project/$projectId/document-category/$categoryId'
      fullPath: '/documents/project/$projectId/document-category/$categoryId'
      preLoaderRoute: typeof AuthenticatedDashboardDocumentsProjectProjectIdDocumentCategoryCategoryIdIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/condition/$conditionId/': {
      id: '/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/condition/$conditionId/'
      path: '/conditions/project/$projectId/document/$documentId/condition/$conditionId'
      fullPath: '/conditions/project/$projectId/document/$documentId/condition/$conditionId'
      preLoaderRoute: typeof AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdConditionConditionIdIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedDashboardRoute: AuthenticatedDashboardRoute.addChildren({
      AuthenticatedDashboardProjectsIndexRoute,
      AuthenticatedDashboardConditionsCreateConditionIdIndexRoute,
      AuthenticatedDashboardConditionsProjectProjectIdIndexRoute,
      AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdIndexRoute,
      AuthenticatedDashboardDocumentsProjectProjectIdDocumentCategoryCategoryIdIndexRoute,
      AuthenticatedDashboardConditionsProjectProjectIdDocumentDocumentIdConditionConditionIdIndexRoute,
    }),
  }),
  ErrorRoute,
  OidcCallbackRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/error",
        "/oidc-callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_dashboard"
      ]
    },
    "/error": {
      "filePath": "error.tsx"
    },
    "/oidc-callback": {
      "filePath": "oidc-callback.tsx"
    },
    "/_authenticated/_dashboard": {
      "filePath": "_authenticated/_dashboard.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_dashboard/projects/",
        "/_authenticated/_dashboard/conditions/create/$conditionId/",
        "/_authenticated/_dashboard/conditions/project/$projectId/",
        "/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/",
        "/_authenticated/_dashboard/documents/project/$projectId/document-category/$categoryId/",
        "/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/condition/$conditionId/"
      ]
    },
    "/_authenticated/_dashboard/projects/": {
      "filePath": "_authenticated/_dashboard/projects/index.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/conditions/create/$conditionId/": {
      "filePath": "_authenticated/_dashboard/conditions/create/$conditionId/index.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/conditions/project/$projectId/": {
      "filePath": "_authenticated/_dashboard/conditions/project/$projectId/index.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/": {
      "filePath": "_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/index.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/documents/project/$projectId/document-category/$categoryId/": {
      "filePath": "_authenticated/_dashboard/documents/project/$projectId/document-category/$categoryId/index.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/condition/$conditionId/": {
      "filePath": "_authenticated/_dashboard/conditions/project/$projectId/document/$documentId/condition/$conditionId/index.tsx",
      "parent": "/_authenticated/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
