"""add_a_new_attribute

Revision ID: 8106bacbc0e3
Revises: b90d053f3632
Create Date: 2025-04-14 14:43:53.136701

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime


# revision identifiers, used by Alembic.
revision = '8106bacbc0e3'
down_revision = 'b90d053f3632'
branch_labels = None
depends_on = None

# Values to be inserted into the attribute_keys table
attribute_keys = [
    {"id": 11,
     "key_name": "Requires IEM Terms of Engagement", 
     "created_date": datetime.utcnow(),
     "external_key": "requires_iem_terms_of_engagement"},
]

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Insert initial data into the table
    op.bulk_insert(
        sa.table(
            'attribute_keys',
            sa.Column('id', sa.Integer()),  # Ensure the id column is included
            sa.Column('key_name', sa.Text()),
            sa.Column('created_date', sa.DateTime()),
            sa.Column('external_key', sa.Text()),  # Add external_key column
            schema='condition'
        ),
        attribute_keys
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Delete the inserted data during downgrade
    for key in attribute_keys:
        op.execute(
            sa.text("DELETE FROM condition.attribute_keys WHERE key_name = :key_name")
            .bindparams(key_name=key["key_name"])
        )
    # ### end Alembic commands ###
