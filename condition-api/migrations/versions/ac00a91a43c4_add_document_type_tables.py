"""add_document_type_tables

Revision ID: ac00a91a43c4
Revises: 704b7a6d5500
Create Date: 2024-11-28 12:07:04.618447

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime


# revision identifiers, used by Alembic.
revision = 'ac00a91a43c4'
down_revision = '704b7a6d5500'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_name', sa.String(length=255), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('updated_by', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='condition'
    )
    op.create_table('document_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('document_category_id', sa.Integer(), nullable=True),
    sa.Column('document_type', sa.String(length=255), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('updated_by', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['document_category_id'], ['condition.document_categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='condition'
    )

    document_categories = sa.table('document_categories',
                           sa.column('id', sa.Integer),
                           sa.column('category_name', sa.String),
                           sa.column('created_date', sa.DateTime),
                           sa.column('updated_date', sa.DateTime),
                           schema='condition')

    # Use op.bulk_insert with the table object
    op.bulk_insert(document_categories, [
        {'id': 1, 'category_name': 'Exemption Order and Amendments',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
        {'id': 2, 'category_name': 'Certificate and Amendments',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
        {'id': 3, 'category_name': 'Other',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
    ])

    document_types = sa.table('document_types',
                              sa.column('id', sa.Integer),
                              sa.column('document_category_id', sa.Integer),
                              sa.column('document_type', sa.String),
                              sa.column('created_date', sa.DateTime),
                              sa.column('updated_date', sa.DateTime),
                              schema='condition')

    # Use op.bulk_insert with the table object
    op.bulk_insert(document_types, [
        {'id': 1, 'document_category_id': 2, 'document_type': 'Application Materials',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
        {'id': 2, 'document_category_id': 1, 'document_type': 'Order',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
        {'id': 3, 'document_category_id': 2, 'document_type': 'Comment/Submission',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
        {'id': 4, 'document_category_id': 3, 'document_type': 'Other',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
        {'id': 5, 'document_category_id': 2, 'document_type': 'Decision Materials',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
        {'id': 6, 'document_category_id': 2, 'document_type': 'Schedule B/Certificate',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
        {'id': 7, 'document_category_id': 2, 'document_type': 'Amendment',
         'created_date': datetime.utcnow(), 'updated_date': datetime.utcnow()},
    ])

    with op.batch_alter_table("documents", schema='condition') as batch_op:
        batch_op.drop_column("document_type")
        batch_op.add_column(sa.Column('document_type_id', sa.Integer(), nullable=True))

    op.create_foreign_key(
        'fk_document_type_id',
        'documents',
        'document_types',
        ['document_type_id'],
        ['id'],
        source_schema='condition',
        referent_schema='condition',
        ondelete='CASCADE'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_document_type_id', 'documents', type_='foreignkey', schema='condition')
    with op.batch_alter_table("documents", schema='condition') as batch_op:
        batch_op.drop_column("document_type_id")
        batch_op.add_column(sa.Column('document_type', sa.String(length=100), nullable=True))
    op.drop_table('document_types', schema='condition')
    op.drop_table('document_categories', schema='condition')
    # ### end Alembic commands ###
